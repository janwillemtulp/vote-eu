{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Modal.svelte",
    "../src/Header.svelte",
    "../src/Main.svelte",
    "../src/Footer.svelte",
    "../src/CountrySelect.svelte",
    "../src/Svg.svelte",
    "../src/Question.svelte",
    "../src/MatchingPartiesBar.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import CountrySelect from \"./CountrySelect.svelte\";\n  let modal;\n\n  function closeModal() {\n    document.body.style.overflow = \"auto\";\n    modal.style.display = \"none\";\n  }\n</script>\n\n<style>\n  .modal {\n    width: 100%;\n    height: calc(100% - 30px);\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1000;\n    position: fixed;\n    left: 0;\n    top: 0;\n    display: grid;\n    grid-template-columns: 1fr;\n    justify-items: center;\n    align-items: center;\n    overflow: scroll;\n  }\n\n  .content {\n    width: 80vw;\n    max-width: 800px;\n    background-color: white;\n    padding: 30px;\n    max-height: calc(80vh - 60px);\n    box-shadow: 20px 20px 20px rgba(0, 0, 0, 0.2);\n  }\n\n  .content p {\n    font-size: 16px;\n    line-height: 26px;\n  }\n\n  button {\n    background-color: hsl(224, 80%, 32%);\n    color: hsl(46, 92%, 62%);\n    border: none;\n    padding: 10px 30px;\n    font-size: 18px;\n    margin-left: 10px;\n  }\n\n  button:hover {\n    cursor: pointer;\n    background-color: hsl(224, 80%, 22%);\n  }\n\n  .logo {\n    display: block;\n    object-fit: cover;\n    width: 100%;\n    padding-bottom: 5px;\n    max-width: 200px;\n  }\n</style>\n\n<div class=\"modal\" bind:this={modal}>\n  <div class=\"content\">\n    <div style=\"display: grid; grid-template-rows: 1fr 1fr; align-items: end;\">\n      <img class=\"logo\" src=\"img/logo.png\" alt=\"2019 vote EU\" />\n      <h2>Vote matching, but the other way around</h2>\n    </div>\n    <p>\n      For any of the statements, click on Agree, Neutral, Disagree or No Opinion to explore similarities and differences between political parties and you!\n    </p>\n    <div style=\"text-align: right;\">\n      <CountrySelect />\n      <button on:click={() => closeModal()}>start</button>\n    </div>\n  </div>\n</div>\n",
    "<script>\n  import { allCountries, selectedCountry, selectedPartyIds } from \"./store.js\";\n  import CountrySelect from \"./CountrySelect.svelte\";\n</script>\n\n<style>\n  header {\n    width: 100%;\n    display: grid;\n    grid-auto-columns: 1fr;\n    justify-content: center;\n    background-color: white;\n    position: fixed;\n    top: 0;\n    padding: 10px 0 10px 0;\n  }\n\n  .clear-selection {\n    width: 115px;\n    justify-self: end;\n    margin-right: 10px;\n    height: 26px;\n    padding: 0;\n    border-radius: 40px;\n    border: none;\n    background-color: #ddd;\n    margin: 0 10px 0 0;\n  }\n\n  .clear-selection:hover {\n    cursor: pointer;\n    background-color: #ccc;\n  }\n\n  .opinion-label {\n    display: inline-block;\n    text-align: center;\n    font-weight: bold;\n    font-size: 11px;\n    font-family: \"Libre Baskerville\", serif;\n  }\n\n  .country h1 {\n    position: relative;\n    margin: 0;\n    font-size: 24px;\n    white-space: normal;\n  }\n\n  .country .byline {\n    font-size: 14px;\n    font-family: \"Source Sans Pro\", sans-serif;\n    margin: 0;\n  }\n\n  .container-headers {\n    display: grid;\n    grid-template-columns: 200px 1fr 1fr 1fr 1fr;\n    align-items: end;\n    margin-right: 10px;\n  }\n\n  .country-container {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    justify-items: start;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n\n  .logo {\n    justify-self: start;\n    align-self: start;\n    width: 80%;\n    object-fit: cover;\n    margin: 10px;\n  }\n\n  .logo-container {\n    align-self: end;\n    justify-self: end;\n    margin-right: 10px;\n    text-align: right;\n  }\n\n  .bigger {\n    display: none;\n  }\n\n  .right-country-select {\n    margin-right: 10px;\n    justify-self: end;\n    display: none;\n  }\n\n  .smaller {\n    display: block;\n  }\n\n  .left-country-select {\n    justify-self: start;\n    margin-left: 10px;\n    display: block;\n  }\n\n  @media (min-width: 414px) {\n    .smaller {\n      display: none;\n    }\n\n    .bigger {\n      display: block;\n    }\n\n    .country h1 {\n      white-space: nowrap;\n    }\n\n    .country .byline {\n      font-size: 16px;\n    }\n  }\n\n  @media (min-width: 540px) {\n    .country-container {\n      grid-template-columns: 200px 1fr 200px;\n    }\n\n    .opinion-label {\n      font-size: 14px;\n    }\n\n    .left-country-select {\n      display: none;\n    }\n\n    .right-country-select {\n      display: block;\n    }\n  }\n\n  @media (min-width: 768px) and (min-height: 414px) {\n    .container-headers {\n      grid-template-columns: 200px 1fr 1fr 1fr 1fr 200px;\n    }\n\n    /* .country-container {\n      grid-template-columns: 200px 1fr 200px;\n    } */\n\n    header {\n      padding: 30px 0 10px 0;\n    }\n  }\n\n  @media (min-width: 940px) {\n    header {\n      grid-auto-columns: 940px;\n    }\n\n    .opinion-label {\n      font-size: 18px;\n    }\n  }\n</style>\n\n<header>\n  <div>\n    <div class=\"country-container\">\n      <div class=\"logo-container\">\n        <img src=\"img/logo.png\" alt=\"2019 vote EU\" class=\"logo\" />\n        <div class=\"left-country-select\">\n          <CountrySelect />\n        </div>\n      </div>\n      <div class=\"country\">\n        <h1> {$selectedCountry.name}</h1>\n        <p class=\"byline\">\n          <em>{$selectedCountry.seats} seats</em>\n          in EU parliament\n        </p>\n      </div>\n      <div class=\"right-country-select\">\n        <CountrySelect />\n      </div>\n    </div>\n\n    <div class=\"container-headers\">\n      <button\n        on:click={() => ($selectedPartyIds = [])}\n        style=\"visibility: {$selectedPartyIds.length > 0 ? 'visible' : 'hidden'};\"\n        class=\"clear-selection\">\n        <i class=\"fas fa-times-circle\" />\n        clear selection\n      </button>\n      <div class=\"opinion-label bigger\" style=\"color: hsl(200, 50%, 50%);\">\n        Agree\n      </div>\n      <div class=\"opinion-label bigger\" style=\"color: #999;\">Neutral</div>\n      <div class=\"opinion-label bigger\" style=\"color: hsl(0, 50%, 50%);\">\n        Disagree\n      </div>\n      <div class=\"opinion-label bigger\" style=\"color: hsl(310, 50%, 70%);\">\n        No Opinion\n      </div>\n      <div class=\"opinion-label smaller\" style=\"color: hsl(200, 50%, 50%);\">\n        Agree\n      </div>\n      <div class=\"opinion-label smaller\" style=\"color: #999;\">Neut.</div>\n      <div class=\"opinion-label smaller\" style=\"color: hsl(0, 50%, 50%);\">\n        Dis-agr.\n      </div>\n      <div class=\"opinion-label smaller\" style=\"color: hsl(310, 50%, 70%);\">\n        No Opin.\n      </div>\n    </div>\n  </div>\n</header>\n",
    "<script>\n  import { fade } from \"svelte/transition\";\n  import { afterUpdate } from \"svelte\";\n  import {\n    activeQuestions,\n    allParties,\n    selectedPartyIds,\n    opinions,\n    filteredParties,\n    overlap,\n    difference\n  } from \"./store.js\";\n  import Svg from \"./Svg.svelte\";\n  import Question from \"./Question.svelte\";\n  import MatchingPartiesBar from \"./MatchingPartiesBar.svelte\"\n\n  let innerWidth = 0;\n  let innerHeight = 0;\n  let partyList;\n  let isScrolling;\n\n  afterUpdate(() => {\n    isScrolling = partyList\n      ? partyList.scrollHeight > partyList.clientHeight\n      : false;\n  });\n</script>\n\n<style>\n  main {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    justify-content: center;\n    margin-top: 160px;\n    padding-bottom: 100px;\n  }\n\n  aside {\n    margin-left: 10px;\n    display: none;\n  }\n\n  aside .inner {\n    width: 180px;\n    position: fixed;\n  }\n\n  aside .inner .matching-parties {\n    background-color: #eee;\n    padding: 10px;\n  }\n\n  .matching-parties .label {\n    margin-bottom: 5px;\n  }\n\n  aside h2:first-child {\n    margin-top: 0;\n  }\n\n  aside h2 {\n    font-family: \"Source Sans Pro\", sans-serif;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    font-weight: normal;\n    margin-bottom: 10px;\n    font-size: 20px;\n  }\n\n  aside p {\n    margin: 0;\n  }\n\n  .matching-party {\n    margin-left: 0px;\n    padding: 0 0 10px 0;\n  }\n\n  .matching-party h3 {\n    margin: 0;\n  }\n\n  .matching-party p {\n    margin-top: 0;\n  }\n\n  .overlap-diff {\n    padding: 10px;\n    background-color: #eee;\n    margin-bottom: 2px;\n    display: none;\n  }\n\n  .overlap-diff .value {\n    font-family: \"Libre Baskerville\", serif;\n    font-size: 20px;\n  }\n\n  .overlap-diff .label,\n  .matching-parties .label {\n    font-weight: bold;\n    display: block;\n  }\n\n  .overlap-diff .label span {\n    padding: 0 2px;\n    background-color: hsla(46, 92%, 75%, 1);\n  }\n\n  .party-list {\n    overflow-y: auto;\n    overflow-x: hidden;\n    max-height: 200px;\n  }\n\n  .scroll-hint {\n    width: 100%;\n    text-align: center;\n    font-style: italic;\n    margin-top: 3px;\n  }\n\n  @media (min-height: 414px) {\n    .overlap-diff {\n      display: block;\n    }\n  }\n\n  @media (min-width: 768px) and (min-height: 414px) {\n    main {\n      grid-template-columns: 200px 1fr 200px;\n    }\n\n    aside {\n      display: block;\n    }\n  }\n\n  @media (min-width: 940px) {\n    main {\n      grid-template-columns: 200px 540px 200px;\n    }\n\n    .inner {\n      width: 190px;\n    }\n  }\n</style>\n\n<svelte:window bind:innerWidth bind:innerHeight />\n\n<main>\n  <div>\n    {#each $activeQuestions as question}\n      <Question {question} />\n    {/each}\n  </div>\n  <Svg containerHeight={innerHeight - 150 - 100} />\n  <aside>\n    {#if $selectedPartyIds.length > 0}\n      <div class=\"inner\" transition:fade={{ duration: 200 }}>\n        <h2>Matching part{$difference === 0 ? 'y' : 'ies'}</h2>\n        {#if $selectedPartyIds.length > 1}\n          <div class=\"overlap-diff overlap\">\n            <div>\n              <span class=\"label\">same opinion in:</span>\n              <span class=\"value\">{$overlap}</span>\n              {$overlap === 1 ? 'statement' : 'statements'}\n              of\n              {$activeQuestions.length}\n              {`(${Math.round(($overlap / $activeQuestions.length) * 100)}%)`}\n            </div>\n          </div>\n          <div class=\"overlap-diff diff\">\n            <div>\n              <span class=\"label\">\n                <span>mixed</span>\n                opinions in:\n              </span>\n              <span class=\"value\">{$difference}</span>\n              {overlap === 1 ? 'statement' : 'statements'}\n              of\n              {$activeQuestions.length}\n              {`(${Math.round(($difference / $activeQuestions.length) * 100)}%)`}\n            </div>\n          </div>\n        {/if}\n        <div\n          class=\"matching-parties\"\n          style=\"background-color: {$selectedPartyIds.length === 1 ? 'rgb(179, 219, 186)' : '#eee'};\">\n          {#if $selectedPartyIds.length > 1}\n            <span class=\"label\">\n              {$selectedPartyIds.length}\n              parties match your selection:\n            </span>\n          {/if}\n          <div\n            bind:this={partyList}\n            class=\"party-list\"\n            style=\"max-height: {innerHeight - 460}px\">\n            {#each $filteredParties as party}\n              <div\n                class=\"matching-party\"\n                style=\"padding: {selectedPartyIds.length > 1 ? '0 0 10px 0' : '10px 0'};\">\n                <h3>{party.name_short}</h3>\n                <p>{party.name_full.replace(/(.*)\\(.*\\)/gi, '$1')}</p>\n              </div>\n            {/each}\n          </div>\n        </div>\n        <div\n          class=\"scroll-hint\"\n          style=\"display: {isScrolling ? 'block' : 'none'};\">\n          dont't forget to scroll\n        </div>\n      </div>\n    {/if}\n  </aside>\n</main>\n\n<MatchingPartiesBar />\n",
    "<style>\n  footer {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    background-color: #fff;\n    width: 100%;\n    display: grid;\n    grid-template-columns: auto;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);\n  }\n\n  .inner {\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    justify-content: right;\n    align-items: center;\n    height: 30px;\n    text-align: right;\n  }\n\n  .inner p {\n    margin: 0;\n  }\n\n  .smaller {\n    display: none;\n  }\n\n  .tulp-interactive {\n    margin-right: 5px;\n    font-weight: bold;\n  }\n\n  .about {\n    margin-left: 5px;\n    justify-self: start;\n  }\n\n  @media (min-width: 540px) {\n    .smaller {\n      display: inline;\n    }\n  }\n\n  @media (min-width: 940px) {\n    .inner {\n      width: 940px;\n    }\n  }\n</style>\n\n<footer>\n  <div class=\"inner\">\n    <p>\n      <span class=\"smaller\">concept & design</span>\n      by\n      <a class=\"tulp-interactive\"\n        href=\"http://tulpinteractive.com\"\n        title=\"TULP interactive\"\n        target=\"_blank\">\n        <span>TULP</span> interactive\n      </a>\n    </p>\n    <a class=\"about\" href=\"about.html\" target=\"_blank\" title=\"about 2019 vote EU\">\n      about 2019 vote EU\n    </a>\n  </div>\n</footer>\n",
    "<script>\n  import { allCountries, selectedCountry, selectedPartyIds } from \"./store.js\";\n  import { loadData } from \"./common.js\";\n\n  function setSelectedCountry(countryCode) {\n    $selectedCountry = $allCountries.find(d => d.code === countryCode);\n    $selectedPartyIds = [];\n    loadData(countryCode);\n  }\n</script>\n\n<style>\n  select {\n    outline: none;\n  }\n</style>\n\n<select on:change={() => setSelectedCountry(this.value)}>\n  {#each $allCountries as country}\n    <option\n      value={country.code}\n      selected={country.code === $selectedCountry.code ? 'selected' : ''}>\n      {country.name}\n    </option>\n  {/each}\n</select>\n",
    "<script>\n  import { afterUpdate } from \"svelte\";\n  import { opinions, allParties, selectedPartyIds } from \"./store.js\";\n  import { scaleOrdinal, scaleLinear } from \"d3-scale\";\n  import { extent } from \"d3-array\";\n  import { line, curveMonotoneY } from \"d3-shape\";\n  import { mouse, select } from \"d3-selection\";\n  import { color } from \"d3-color\";\n\n  let rowHeight = 60;\n  let barWidth = 540 / 4 / 15;\n  let answerWidth = 540 / 4;\n  let hoverParty;\n  let hover = undefined;\n  let mousePos;\n  let popupHeight;\n  let innerWidth;\n  export let containerHeight;\n  $: containerWidth = innerWidth\n    ? innerWidth < 768\n      ? innerWidth - 210\n      : innerWidth - 400\n    : 540;\n\n  $: xc = scaleOrdinal()\n    .domain([100, 50, 0, null])\n    .range(Array.from(Array(4).keys()).map(d => d * answerWidth));\n\n  $: y = scaleLinear()\n    .domain(extent($opinions.map(d => d.question.id)))\n    .range([0, 21 * rowHeight * 2]);\n\n  $: xOffset = block => {\n    // if (block.answer.simplifiedValue === 100) {\n    // return answerWidth - barWidth - block.parties.length * barWidth;\n    // } else if (block.answer.simplifiedValue === 50) {\n    return answerWidth / 2 - (block.parties.length * barWidth) / 2;\n    // }\n    // return barWidth;\n  };\n\n  function filterOpinionsByParty(party) {\n    return $opinions.filter(d => d.parties.map(d => d.id).includes(party.id));\n  }\n\n  $: getPath = (partyId, opinions) => {\n    return line()\n      .x(\n        (d, i) =>\n          xc(d.answer.simplifiedValue) +\n          xOffset(d) +\n          d.parties.map(d => d.id).indexOf(partyId) * barWidth\n      )\n      .y(\n        (d, i) =>\n          -rowHeight / 2 +\n          Math.floor(i / 3) * 2 * rowHeight +\n          (i % 3 === 0 ? -rowHeight / 4 : i % 3 === 2 ? rowHeight / 4 : 0)\n      )\n      .curve(curveMonotoneY)(opinions);\n  };\n\n  function updateSelectedPartyIds(opinion) {\n    const partyIds = opinion.parties.map(d => d.id);\n\n    if ($selectedPartyIds.length === 0) {\n      $selectedPartyIds = partyIds;\n    } else if ($selectedPartyIds.every(d => partyIds.includes(d))) {\n      $selectedPartyIds = $selectedPartyIds.filter(d => !partyIds.includes(d));\n    } else if ($selectedPartyIds.some(d => partyIds.includes(d))) {\n      $selectedPartyIds = $selectedPartyIds.filter(d => partyIds.includes(d));\n    } else {\n      $selectedPartyIds = partyIds;\n    }\n  }\n\n  $: includesSelectedPartyIds = opinion =>\n    $selectedPartyIds.length > 0 &&\n    $selectedPartyIds.every(d => opinion.parties.map(p => p.id).includes(d));\n\n  $: selectedPartiePaths = $allParties.filter(d =>\n    $selectedPartyIds.includes(d.id)\n  );\n  $: nonSelectedPartiePaths = $allParties.filter(\n    d => !$selectedPartyIds.includes(d.id)\n  );\n\n  function showPopup(info, e) {\n    if (e.sourceCapabilities.firesTouchEvents) {\n      return;\n    }\n\n    hoverParty = info;\n    hover = { question: info.question, answer: info.answer };\n  }\n\n  function hidePopup() {\n    hoverParty = undefined;\n    hover = undefined;\n  }\n\n  $: popupLeft = () =>\n    !mousePos\n      ? 0\n      : mousePos[0] < innerWidth / 2\n      ? mousePos[0] + 20\n      : mousePos[0] - 20 - 40 - 400;\n\n  $: popupMarginTop = () =>\n    Math.min(0, innerHeight - (mousePos ? mousePos[2] + popupHeight + 20 : 0));\n\n  function resize() {\n    if (innerWidth < 768) {\n      barWidth = (innerWidth - 210) / 4 / 15;\n      answerWidth = (innerWidth - 210) / 4;\n    } else if (innerWidth < 940) {\n      barWidth = containerWidth / 4 / 15;\n      answerWidth = containerWidth / 4;\n    } else {\n      barWidth = 540 / 4 / 15;\n      answerWidth = 540 / 4;\n    }\n  }\n\n  afterUpdate(() => {\n    resize();\n  });\n</script>\n\n<style>\n  .answer {\n    fill: #eee;\n    stroke: #fff;\n    stroke-width: 2;\n  }\n\n  .answer:hover {\n    fill: #ddd;\n    cursor: pointer;\n  }\n\n  .party-answer:hover {\n    cursor: pointer;\n  }\n\n  .popup {\n    position: absolute;\n    left: 400px;\n    top: 400px;\n    width: 400px;\n    background-color: white;\n    box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.2);\n    padding: 20px;\n    z-index: 1000;\n    display: none;\n  }\n\n  .popup h2 {\n    margin: 3px 0;\n    font-family: \"Libre Baskerville\", serif;\n  }\n\n  .popup h4 {\n    margin: 3px 0;\n    font-family: \"Source Sans Pro\", sans-serif;\n    font-weight: normal;\n  }\n\n  path {\n    pointer-events: none;\n  }\n\n  /* @media (min-width: 940px) {\n    .popup {\n      display: block;\n    }\n  } */\n</style>\n\n<svelte:window bind:innerWidth />\n\n<div>\n  <svg width={Math.min(containerWidth, 540)} height={22 * 2 * rowHeight + 22}>\n    <g>\n      {#each $opinions as opinion}\n        <rect\n          x={xc(opinion.answer.simplifiedValue)}\n          y={y(opinion.question.id)}\n          width={answerWidth}\n          height={rowHeight}\n          on:click={() => updateSelectedPartyIds(opinion)}\n          on:mouseover={() => {\n            hover = opinion;\n          }}\n          on:mouseout={() => {\n            hover = undefined;\n          }}\n          class=\"answer\"\n          style=\"fill: {hover && hover.question.id === opinion.question.id && hover.answer.simplifiedValue === opinion.answer.simplifiedValue ? color(includesSelectedPartyIds(opinion) ? opinion.answer.colorLight : '#eee')\n                .darker(0.5)\n                .rgb() : color(includesSelectedPartyIds(opinion) ? opinion.answer.colorLight : '#eee')}; \" />\n      {/each}\n\n      {#each nonSelectedPartiePaths as party}\n        <path\n          transform=\"translate({barWidth / 2}, {rowHeight})\"\n          d={getPath(party.id, filterOpinionsByParty(party).reduce((acc, cur) => acc.concat(\n                  [cur, cur, cur]\n                ), []))}\n          style=\"fill: none; stroke: rgba(0, 0, 0, 0.2); stroke-dasharray: 2 2;\" />\n      {/each}\n\n      {#each selectedPartiePaths as party}\n        <path\n          transform=\"translate({barWidth / 2}, {rowHeight})\"\n          d={getPath(party.id, filterOpinionsByParty(party).reduce((acc, cur) => acc.concat(\n                  [cur, cur, cur]\n                ), []))}\n          style=\"fill: none; stroke: #000; stroke-dasharray: none;\" />\n      {/each}\n\n      {#each $opinions as opinion}\n        <g\n          transform=\"translate({xc(opinion.answer.simplifiedValue)}, {y(opinion.question.id)})\">\n          {#each opinion.parties as party, i}\n            <rect\n              x={xOffset(opinion) + i * barWidth}\n              y={rowHeight / 4}\n              width={barWidth}\n              height={rowHeight / 2}\n              style=\"fill: {$selectedPartyIds.includes(party.id) ? opinion.answer.color : opinion.answer.colorLight}; stroke: {containerWidth < 368 ? ($selectedPartyIds.includes(party.id) ? opinion.answer.color : opinion.answer.color) : 'black'}\"\n              class=\"party-answer\"\n              on:click={() => updateSelectedPartyIds(opinion)}\n              on:mousemove={e => (mousePos = [e.clientX, e.offsetY, e.clientY])}\n              on:mouseover={e => showPopup({ party, ...opinion }, e)}\n              on:mouseout={() => hidePopup()} />\n          {/each}\n        </g>\n      {/each}\n    </g>\n  </svg>\n  {#if mousePos}\n    <div\n      class=\"popup\"\n      style=\"display: {hoverParty ? 'block' : 'none'}; left: {popupLeft()}px; top: {mousePos[1]}; margin-top: {popupMarginTop()}px;\"\n      bind:clientHeight={popupHeight}>\n      {#if hoverParty}\n        <h2>{hoverParty.party.name_short}</h2>\n        <h4>{hoverParty.party.name_full}</h4>\n        <h4 style=\"color: {hoverParty.answer.color}\">\n          {hoverParty.answer.label}\n        </h4>\n        <p>\n          <em>Motivation:</em>\n          {hoverParty.parties.find(d => d.id === hoverParty.party.id).motivation.text}\n        </p>\n        <p>\n          <em>source:</em>\n          <a\n            href={hoverParty.parties.find(d => d.id === hoverParty.party.id).motivation.link}>\n            {hoverParty.parties.find(d => d.id === hoverParty.party.id).motivation.source}\n          </a>\n        </p>\n      {/if}\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import { opinions, selectedPartyIds } from \"./store.js\";\n\n  export let question;\n\n  $: answerValuesRemaining = () =>\n    $opinions\n      .filter(d => d.question.id === question.id)\n      .filter(\n        d =>\n          d.parties.map(d => d.id).filter(d => $selectedPartyIds.includes(d))\n            .length > 0\n      );\n\n  $: marked = () => answerValuesRemaining().length === 1;\n</script>\n\n<style>\n  p {\n    height: 120px;\n    margin: 0 10px 0 10px;\n    text-align: right;\n    font-weight: normal;\n  }\n\n  @media (min-width: 940px) {\n    p {\n      margin: 0 10px 0 0;\n    }\n  }\n</style>\n\n<p\n  style=\"color: {marked() ? answerValuesRemaining()[0].answer.color : 'black'};\">\n  <span\n    style=\"padding: 0 0 0 4px; background-color: {marked() || $selectedPartyIds.length === 0 ? 'transparent' : 'hsla(46, 92%, 75%, 1)'};\">\n    {question.text}\n  </span>\n</p>\n",
    "<script>\n  import {\n    overlap,\n    difference,\n    filteredParties,\n    selectedPartyIds\n  } from \"./store.js\";\n</script>\n\n<style>\n  .container {\n    width: 100%;\n    background-color: #eee;\n    position: fixed;\n    bottom: 30px;\n    left: 0;\n    display: grid;\n    padding: 5px;\n  }\n\n  .marked {\n    padding: 0 2px;\n    background-color: hsla(46, 92%, 75%, 1);\n  }\n\n  .label {\n    font-weight: bold;\n    margin-right: 10px;\n  }\n\n  .grid-item {\n    text-align: center;\n  }\n\n  .value {\n    font-family: \"Libre Baskerville\", serif;\n    font-size: 20px;\n  }\n\n  .single-match {\n    background-color: rgb(179, 219, 186);\n    grid-template-columns: 1fr 2fr;\n    align-items: start;\n    justify-items: start;\n  }\n\n  .single-match .label {\n    justify-self: end;\n  }\n\n  .multi-match .grid-item {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n  }\n\n  .multi-match .label {\n    align-self: start;\n  }\n\n  .multi-match .value {\n    align-self: end;\n  }\n\n  .multi-match {\n    grid-template-columns: 1fr 1fr 1fr;\n    border-top: 1px solid #ddd;\n  }\n\n  h3,\n  p {\n    margin: 0;\n    text-align: left;\n  }\n\n  @media (min-width: 414px) {\n    .single-match {\n      grid-template-columns: 200px 1fr;\n    }\n  }\n\n  @media (min-width: 768px) and (min-height: 414px) {\n    .container {\n      display: none;\n    }\n  }\n</style>\n\n{#if $selectedPartyIds.length > 0}\n  <div\n    class=\"container {$selectedPartyIds.length === 1 ? 'single-match' : 'multi-match'}\">\n    {#if $selectedPartyIds.length > 1}\n      <div class=\"grid-item\">\n        <div class=\"label\">matching parties:</div>\n        <span class=\"value\">{$filteredParties.length}</span>\n      </div>\n      <div class=\"grid-item\">\n        <div class=\"label\">same opinion:</div>\n        <span class=\"value\">{$overlap}</span>\n      </div>\n      <div class=\"grid-item\">\n        <div class=\"label\">\n          <span class=\"marked\">mixed</span>\n          opinions:\n        </div>\n        <span class=\"value\">{$difference}</span>\n      </div>\n    {:else}\n      <span class=\"label grid-item\">matching party:</span>\n      <div class=\"grid-item\">\n        <h3 class=\"name-short\">{$filteredParties[0].name_short}</h3>\n        <p class=\"name-short\">\n          {$filteredParties[0].name_full.replace(/(.*)\\(.*\\)/gi, '$1')}\n        </p>\n      </div>\n    {/if}\n  </div>\n{/if}\n"
  ],
  "names": [],
  "mappings": "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"
}